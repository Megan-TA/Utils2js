[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "es6/.external-ecmascript.js",
    "static": true,
    "longname": "es6/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "es6/index.js",
    "content": "import * as _Brower from './lib/brower';\r\nimport * as _Main from './lib/index';\r\nimport * as _Number from './lib/number';\r\nimport * as _String from './lib/string';\r\nimport * as _Url from './lib/url';\r\nimport * as _Object from './lib/object';\r\nimport * as _Array from './lib/array';\r\nexport { _Main, _Brower, _Number, _String, _Url, _Object, _Array };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "es6/lib/array.js",
    "content": "/**\r\n * 分割数组\r\n * 把一个数组arr按照指定的数组大小size分割成若干个数组块。\r\n * @example\r\n * chunk([1,2,3,4],2) = [[1,2],[3,4]]\r\n * chunk([1,2,3,4,5],2) = [[1,2],[3,4],[5]]\r\n *\r\n * @param {any[]} arr 原数组\r\n * @param {number} size 指定位数\r\n * @returns {any[]} 新数组\r\n */\r\nfunction chunk(arr, size) {\r\n    var finalArr = [];\r\n    var tempArr = [];\r\n    if (size === 0)\r\n        return arr;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        tempArr.push(arr[i]);\r\n        if ((i + 1) % size === 0) {\r\n            finalArr.push(tempArr);\r\n            tempArr = [];\r\n        }\r\n    }\r\n    if (tempArr.length >= 1) {\r\n        finalArr.push(tempArr);\r\n        tempArr = [];\r\n    }\r\n    return finalArr;\r\n}\r\n/**\r\n * 摧毁数组指定数值\r\n * @example\r\n * destroyer([2,3,1,2], 2) => [3,1]\r\n *\r\n * @param {any[]} arr 待摧毁的数组\r\n * @returns {any[]} 待摧毁的值\r\n */\r\nfunction destroyer(arr, any) {\r\n    var args = [];\r\n    if (arguments.length > 1) {\r\n        args = Array.prototype.slice.call(arguments, 1, arguments.length);\r\n    }\r\n    var newArr = arr.filter(function (item) {\r\n        return args.indexOf(item) === -1;\r\n    });\r\n    return newArr;\r\n}\r\n/**\r\n * 打乱一个指定的数组\r\n * @example\r\n * upSet([1,6,3,2]) => [1,3,6,2]\r\n * @param {any[]} arr 待打乱的数组\r\n * @returns {any[]} 打乱之后的数组\r\n */\r\nfunction upSet(arr) {\r\n    return arr.sort(function () {\r\n        return Math.random() - 0.5;\r\n    });\r\n}\r\nexport { upSet, destroyer, chunk };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "upSet",
    "memberof": "es6/lib/array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/array.js~upSet",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/array.js",
    "importStyle": "{upSet}",
    "description": "打乱一个指定的数组",
    "examples": [
      "upSet([1,6,3,2]) => [1,3,6,2]"
    ],
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any[]} 打乱之后的数组"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "待打乱的数组"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any[]"
      ],
      "spread": false,
      "description": "打乱之后的数组"
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "destroyer",
    "memberof": "es6/lib/array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/array.js~destroyer",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/array.js",
    "importStyle": "{destroyer}",
    "description": "摧毁数组指定数值",
    "examples": [
      "destroyer([2,3,1,2], 2) => [3,1]"
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any[]} 待摧毁的值"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "待摧毁的数组"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any[]"
      ],
      "spread": false,
      "description": "待摧毁的值"
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "chunk",
    "memberof": "es6/lib/array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/array.js~chunk",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/array.js",
    "importStyle": "{chunk}",
    "description": "分割数组\n把一个数组arr按照指定的数组大小size分割成若干个数组块。",
    "examples": [
      "chunk([1,2,3,4],2) = [[1,2],[3,4]]\nchunk([1,2,3,4,5],2) = [[1,2],[3,4],[5]]"
    ],
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any[]} 新数组"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "原数组"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "指定位数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any[]"
      ],
      "spread": false,
      "description": "新数组"
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "es6/lib/brower.js",
    "content": "/**\r\n * 判断浏览器类型 返回对应浏览器名称\r\n * @returns\r\n */\r\n// let finalName = 'IE'\r\n// const userAgent = navigator.userAgent\r\n// if (userAgent.indexOf('Chrome') > -1) {\r\n//     finalName = 'Chrome'\r\n// } else if (userAgent.indexOf('Firefox') > -1) {\r\n//     finalName = 'Firefox'\r\n// } else if (userAgent.indexOf('Opera') > -1) {\r\n//     finalName = 'Opera'\r\n// } else if (userAgent.indexOf('Safari') > -1) {\r\n//     finalName = 'Safari'\r\n// }\r\nlet finalName = 'Chrome';\r\n/**\r\n * 是否是IE浏览器\r\n * @returns {boolean} true 是的 false 不是\r\n */\r\nconst isIE = finalName == 'IE';\r\n/**\r\n * 是否是Chrome浏览器\r\n * @returns {boolean} true 是的 false 不是\r\n */\r\nconst isChrome = finalName == 'Chrome';\r\n/**\r\n * 是否是Firefox浏览器\r\n * @returns {boolean} true 是的 false 不是\r\n */\r\nconst isFirefox = finalName == 'Firefox';\r\n/**\r\n * 是否是Opera浏览器\r\n * @returns {boolean} true 是的 false 不是\r\n */\r\nconst isOpera = finalName == 'Opera';\r\n/**\r\n * 是否是Safari浏览器\r\n * @returns {boolean} true 是的 false 不是\r\n */\r\nconst isSafari = finalName == 'Safari';\r\nexport { isIE, isChrome, isFirefox, isOpera, isSafari };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/brower.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "finalName",
    "memberof": "es6/lib/brower.js",
    "static": true,
    "longname": "es6/lib/brower.js~finalName",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/lib/brower.js",
    "importStyle": null,
    "description": "判断浏览器类型 返回对应浏览器名称",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "isIE",
    "memberof": "es6/lib/brower.js",
    "static": true,
    "longname": "es6/lib/brower.js~isIE",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/brower.js",
    "importStyle": "{isIE}",
    "description": "是否是IE浏览器",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true 是的 false 不是"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true 是的 false 不是"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "isChrome",
    "memberof": "es6/lib/brower.js",
    "static": true,
    "longname": "es6/lib/brower.js~isChrome",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/brower.js",
    "importStyle": "{isChrome}",
    "description": "是否是Chrome浏览器",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true 是的 false 不是"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true 是的 false 不是"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "isFirefox",
    "memberof": "es6/lib/brower.js",
    "static": true,
    "longname": "es6/lib/brower.js~isFirefox",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/brower.js",
    "importStyle": "{isFirefox}",
    "description": "是否是Firefox浏览器",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true 是的 false 不是"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true 是的 false 不是"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "isOpera",
    "memberof": "es6/lib/brower.js",
    "static": true,
    "longname": "es6/lib/brower.js~isOpera",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/brower.js",
    "importStyle": "{isOpera}",
    "description": "是否是Opera浏览器",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true 是的 false 不是"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true 是的 false 不是"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "isSafari",
    "memberof": "es6/lib/brower.js",
    "static": true,
    "longname": "es6/lib/brower.js~isSafari",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/brower.js",
    "importStyle": "{isSafari}",
    "description": "是否是Safari浏览器",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true 是的 false 不是"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true 是的 false 不是"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "es6/lib/date.js",
    "content": "/*\r\n * 日期方法扩展（基于dayjs）\r\n * @Author: chen_huang\r\n * @Date: 2018-06-19 14:32:21\r\n * @Last Modified by: chen_huang\r\n * @Last Modified time: 2018-06-19 15:10:23\r\n */\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/date.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "es6/lib/index.js",
    "content": "import { getRandomBit } from './number';\r\nimport { interpolation } from './object';\r\nlet INSTANCE = null;\r\n/**\r\n * Utils2js 单列模式\r\n * @class Utils2js\r\n */\r\nclass Utils2js {\r\n    static get getInstance() {\r\n        if (!INSTANCE) {\r\n            INSTANCE = new Utils2js();\r\n        }\r\n        return INSTANCE;\r\n    }\r\n    /**\r\n     * 控制台输出多彩提示信息\r\n     * IE版本默认不支持多彩控制信息，默认输出白底黑字文本\r\n     * @example\r\n     * const channelOne = Logger('频道1')\r\n     * channelOne.info('这是测试文本')\r\n     * @param {string} channel 必须先指定文本属于自身的频道\r\n     * @param {{color?: string}} [options={}] （可选）指定需要展示的颜色值，默认会随机生成\r\n     * @returns {object} 输出{info}格式的对象 通过.info()最终输出的带多彩的类似\"['频道1']这是测试文本\" 形式\r\n     * @memberof Utils2js\r\n     */\r\n    Logger(channel, options = {}) {\r\n        // 浏览器检测\r\n        function info(message) {\r\n            var remainParams = Array.prototype.slice.call(arguments, 1);\r\n            var colorArray = [interpolation('%c[{0}]', channel), `color: ${options.color}`, message].concat(remainParams);\r\n            if (options && options.color) {\r\n                options.color = options.color;\r\n            }\r\n            else {\r\n                options.color = getRandomBit(6, 16);\r\n            }\r\n            console.log.apply(this, colorArray);\r\n        }\r\n        function red(message) {\r\n            var remainParams = Array.prototype.slice.call(arguments, 1).join(' ');\r\n            var colorArray = [interpolation('%c[{0}]', channel), `color: #CA0C16`, message + ' ' + remainParams];\r\n            console.log.apply(this, colorArray);\r\n        }\r\n        return {\r\n            info,\r\n            red\r\n        };\r\n    }\r\n    /**\r\n     * 更准确的类型判定方法\r\n     * 返回类型如下：number/string/boolean/object/function/regexp/null/undefined/array/date/error\r\n     *\r\n     * @param {*} params\r\n     * @returns {string} 统一返回小写的具体类型名称\r\n     * @memberof Utils2js\r\n     */\r\n    Type(params) {\r\n        const REGEXP = /^\\[object\\W([a-zA-Z]+)\\]$/g;\r\n        const waitingForReg = Object.prototype.toString.call(params);\r\n        const handleResult = REGEXP.exec(waitingForReg);\r\n        return handleResult[1].toLowerCase();\r\n    }\r\n}\r\nconst STANCE__UTILS2JS = Utils2js.getInstance;\r\nexport const Logger = STANCE__UTILS2JS.Logger;\r\nexport const Type = STANCE__UTILS2JS.Type;\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "INSTANCE",
    "memberof": "es6/lib/index.js",
    "static": true,
    "longname": "es6/lib/index.js~INSTANCE",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/lib/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "Utils2js",
    "memberof": "es6/lib/index.js",
    "static": true,
    "longname": "es6/lib/index.js~Utils2js",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/lib/index.js",
    "importStyle": null,
    "description": "Utils2js 单列模式",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Utils2js"
      }
    ],
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "get",
    "name": "getInstance",
    "memberof": "es6/lib/index.js~Utils2js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/index.js~Utils2js.getInstance",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "Logger",
    "memberof": "es6/lib/index.js~Utils2js",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "es6/lib/index.js~Utils2js#Logger",
    "access": "public",
    "description": "控制台输出多彩提示信息\nIE版本默认不支持多彩控制信息，默认输出白底黑字文本",
    "examples": [
      "const channelOne = Logger('频道1')\nchannelOne.info('这是测试文本')"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} 输出{info}格式的对象 通过.info()最终输出的带多彩的类似\"['频道1']这是测试文本\" 形式"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": "必须先指定文本属于自身的频道"
      },
      {
        "nullable": null,
        "types": [
          "{color?: string}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "（可选）指定需要展示的颜色值，默认会随机生成"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "输出{info}格式的对象 通过.info()最终输出的带多彩的类似\"['频道1']这是测试文本\" 形式"
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "Type",
    "memberof": "es6/lib/index.js~Utils2js",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "es6/lib/index.js~Utils2js#Type",
    "access": "public",
    "description": "更准确的类型判定方法\n返回类型如下：number/string/boolean/object/function/regexp/null/undefined/array/date/error",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 统一返回小写的具体类型名称"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "统一返回小写的具体类型名称"
    }
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "STANCE__UTILS2JS",
    "memberof": "es6/lib/index.js",
    "static": true,
    "longname": "es6/lib/index.js~STANCE__UTILS2JS",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/lib/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "Logger",
    "memberof": "es6/lib/index.js",
    "static": true,
    "longname": "es6/lib/index.js~Logger",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/index.js",
    "importStyle": "{Logger}",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "Type",
    "memberof": "es6/lib/index.js",
    "static": true,
    "longname": "es6/lib/index.js~Type",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/index.js",
    "importStyle": "{Type}",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "es6/lib/number.js",
    "content": "/**\r\n * 判断是否是整数\r\n *\r\n * @param {number} Num\r\n * @returns {boolean} true 是整数 false不是\r\n */\r\nfunction isInt(Num) {\r\n    return Math.floor(Num) == Num;\r\n}\r\n/**\r\n * 强制转换成整数\r\n * @private\r\n * @param {number} floatNum\r\n * @returns {ItoInt}\r\n */\r\nfunction toInt(floatNum) {\r\n    const temp = {\r\n        num: floatNum,\r\n        pow: 1\r\n    };\r\n    // 是整数跳过\r\n    if (isInt(floatNum)) {\r\n        return temp;\r\n    }\r\n    const stringNum = floatNum + '';\r\n    const len = stringNum.split('.')[1].length;\r\n    const pow = Math.pow(10, len);\r\n    // 坑\r\n    // 0.55 * 100 = 55.00000000000001 用parseInt强制转整数\r\n    temp.num = Number.parseInt((floatNum * pow).toString(), 10);\r\n    temp.pow = pow;\r\n    return temp;\r\n}\r\n/**\r\n * 比较两个数 取整 取最大幂数\r\n * @private\r\n * @param  {number} num1 第一个number\r\n * @param  {number} num2 第二个number\r\n * @param  {string} op 指定操作类型\r\n */\r\nfunction operate(num1, num2, op) {\r\n    const toInt1 = toInt(num1);\r\n    const toInt2 = toInt(num2);\r\n    // 取整\r\n    const t1 = toInt1.num;\r\n    const t2 = toInt2.num;\r\n    // 取幂数\r\n    const pow1 = toInt1.pow;\r\n    const pow2 = toInt2.pow;\r\n    // 先比较幂数大小 再做处理\r\n    switch (op) {\r\n        case 'add':\r\n            if (pow1 == pow2) {\r\n                return (t1 + t2) / pow1;\r\n            }\r\n            if (pow1 > pow2) {\r\n                return (t1 + t2 * (pow1 / pow2)) / pow1;\r\n            }\r\n            else {\r\n                return (t1 * (pow2 / pow1) + t2) / pow2;\r\n            }\r\n        case 'sub':\r\n            if (pow1 == pow2) {\r\n                return (t1 - t2) / pow1;\r\n            }\r\n            if (pow1 > pow2) {\r\n                return (t1 - t2 * (pow1 / pow2)) / pow1;\r\n            }\r\n            else {\r\n                return (t1 * (pow2 / pow1) - t2) / pow2;\r\n            }\r\n        case 'ride':\r\n            return (t1 * t2) / (pow1 * pow2);\r\n        case 'divide':\r\n            // 参考  55 / 0.22 => ( 55 / 22 ) * (100 / 1)  注意分子和分母顺序\r\n            return (t1 / t2) * (pow2 / pow1);\r\n    }\r\n}\r\n/**\r\n * float 解决js处理浮点数不精确问题\r\n * @public\r\n */\r\nconst float = {\r\n    /**\r\n     * 两个浮点数相加\r\n     * @example\r\n     * float.add(0.1, 0.2) => 0.3\r\n     * @param {number} num1 第一个number类型参数\r\n     * @param {number} num2 第二个number类型参数\r\n     * @returns {number} 相加后的结果\r\n     */\r\n    add(num1, num2) {\r\n        return operate(num1, num2, 'add');\r\n    },\r\n    /**\r\n     * 两个浮点数相减\r\n     * @example\r\n     * float.sub(0.2, 0.1) => 0.1\r\n     * @param {number} num1 第一个number类型参数\r\n     * @param {number} num2 第二个number类型参数\r\n     * @returns {number} 第一个参数 - 第二个参数 后的结果\r\n     */\r\n    sub(num1, num2) {\r\n        return operate(num1, num2, 'sub');\r\n    },\r\n    /**\r\n     * 浮点数相乘\r\n     * @example\r\n     * float.ride(0.2, 0.1) => 0.02\r\n     * @param {number} num1 第一个number类型参数\r\n     * @param {number} num2 第二个number类型参数\r\n     * @returns {number} 第一个参数 * 第二个参数 后的结果\r\n     */\r\n    ride(num1, num2) {\r\n        return operate(num1, num2, 'ride');\r\n    },\r\n    /**\r\n     * 浮点数相除\r\n     * @example\r\n     * float.ride(0.2, 0.1) => 2\r\n     * @param {number} num1 第一个number类型参数\r\n     * @param {number} num2 第二个number类型参数\r\n     * @returns {number} 第一个参数 / 第二个参数 后的结果\r\n     */\r\n    divide(num1, num2) {\r\n        return operate(num1, num2, 'divide');\r\n    }\r\n};\r\n/**\r\n * 获取指定位数的X进制数\r\n * @example\r\n * getRandomBit(6, 16)\r\n * @param {number} num 指定输出的位数\r\n * @param {number} bit 指定进制数 8/10/16进制\r\n * @returns {string} 输出'#abcwed'形式的指定进制字符串\r\n */\r\nfunction getRandomBit(num, bit = 10) {\r\n    let result = '#';\r\n    if (typeof num != 'number') {\r\n        throw new Error('num类型必须为数字!');\r\n    }\r\n    for (let i = 0; i <= num - 1; i++) {\r\n        result += Math.floor(Math.random() * bit).toString(bit);\r\n    }\r\n    return result;\r\n}\r\nexport { float, getRandomBit };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/number.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "isInt",
    "memberof": "es6/lib/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/number.js~isInt",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/lib/number.js",
    "importStyle": null,
    "description": "判断是否是整数",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true 是整数 false不是"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Num",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true 是整数 false不是"
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "toInt",
    "memberof": "es6/lib/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/number.js~toInt",
    "access": "private",
    "export": false,
    "importPath": "utils2js/es6/lib/number.js",
    "importStyle": null,
    "description": "强制转换成整数",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ItoInt}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "floatNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ItoInt"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "operate",
    "memberof": "es6/lib/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/number.js~operate",
    "access": "private",
    "export": false,
    "importPath": "utils2js/es6/lib/number.js",
    "importStyle": null,
    "description": "比较两个数 取整 取最大幂数",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num1",
        "description": "第一个number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num2",
        "description": "第二个number"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "op",
        "description": "指定操作类型"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "float",
    "memberof": "es6/lib/number.js",
    "static": true,
    "longname": "es6/lib/number.js~float",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/number.js",
    "importStyle": "{float}",
    "description": "float 解决js处理浮点数不精确问题",
    "lineNumber": 83,
    "type": {
      "types": [
        "{\"add\": function, \"sub\": function, \"ride\": function, \"divide\": function}"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "getRandomBit",
    "memberof": "es6/lib/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/number.js~getRandomBit",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/number.js",
    "importStyle": "{getRandomBit}",
    "description": "获取指定位数的X进制数",
    "examples": [
      "getRandomBit(6, 16)"
    ],
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 输出'#abcwed'形式的指定进制字符串"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": "指定输出的位数"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bit",
        "description": "指定进制数 8/10/16进制"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "输出'#abcwed'形式的指定进制字符串"
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "es6/lib/object.js",
    "content": "/*\r\n * 对象扩展\r\n * @Author: chen_huang\r\n * @Date: 2018-06-13 17:00:34\r\n * @Last Modified by: chen_huang\r\n * @Last Modified time: 2018-08-20 17:39:30\r\n */\r\n/**\r\n * 浅拷贝（不包括原型链属性拷贝）\r\n * @example\r\n * simpleCopy({}, { name: '张三' })\r\n * @param {object} [destination={}] 默认空对象\r\n * @param {object} source 待拷贝对象\r\n * @returns {object} 输出浅拷贝对象\r\n */\r\nfunction simpleCopy(destination = {}, source) {\r\n    Object.keys(source).forEach((value, key) => {\r\n        if (!destination.hasOwnProperty(key)) {\r\n            return destination[key] = value;\r\n        }\r\n    });\r\n    return destination;\r\n}\r\n/**\r\n * 获取指定对象下指定字段的值，支持递归\r\n * @example\r\n * prop({a: {b: 1}}, 'a.b') => 1\r\n * prop({a: {b: 1}}, 'a')   => {b: 1}\r\n * prop({a: {b: 1}}, 'm')   => null\r\n * @param {object} [obj={}] 待查找的原始对象\r\n * @param {string} [path=''] 需要查找的节点\r\n * @returns {any} 未找到默认输出null\r\n */\r\nfunction prop(obj = {}, path = '') {\r\n    let key;\r\n    let pathArray;\r\n    pathArray = path.split('.');\r\n    while ((key = pathArray.shift())) {\r\n        try {\r\n            obj = obj[key];\r\n        }\r\n        catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n/**\r\n * 深拷贝（基于递归）\r\n * @example\r\n * deepCopy({name: 'zhansgan', obj: {}, arr: [2, 3]})\r\n * @param {object} [data = {}] 原始对象\r\n * @param {object} [final] 可选\r\n * @returns {object} 深拷贝之后的对象\r\n */\r\nfunction deepCopy(data = {}, final = {}) {\r\n    for (let key in data) {\r\n        const keyToVal = data[key];\r\n        const val = Object.prototype.toString.call(keyToVal).match(/^\\[object\\s(\\w+)\\]$/)[1];\r\n        switch (val) {\r\n            case 'Object':\r\n                final[key] = deepCopy(keyToVal, {});\r\n                break;\r\n            case 'Array':\r\n                final[key] = deepCopy(keyToVal, []);\r\n                break;\r\n            case 'RegExp':\r\n                final[key] = new RegExp(keyToVal);\r\n                break;\r\n            case 'Undefined':\r\n                final[key] = undefined;\r\n                break;\r\n            case 'Null':\r\n                final[key] = null;\r\n                break;\r\n            default:\r\n                final[key] = keyToVal;\r\n        }\r\n    }\r\n    return final;\r\n}\r\n/**\r\n * 自定义插值 适用于取到接口返回的JSON根据需要转换成指定格式的字符串\r\n * @example\r\n * 基于位置的插值表达式 interpolation('{0}{3}{1}{1}{2}', 'A', 'B', 'C', 'D') => ADBBC\r\n * 基于字段的插值表达式 interpolation('{name} - {userID}', {name: 'test',userID: 1, age: 12}) =>test - 1\r\n * @param {string} param  字符串\r\n * @param {*} options ...options 字符串|对象\r\n * @returns {string} 最终输出的字符串\r\n */\r\nfunction interpolation(param, ...options) {\r\n    let arg1 = arguments[0] || '';\r\n    const arg2 = arguments[1] || {};\r\n    let matchArray = [];\r\n    const REG_RULE = /{([a-zA-Z0-9]+)}/;\r\n    const REG_NUM_RULE = /\\d+/;\r\n    while ((matchArray = REG_RULE.exec(arg1))) {\r\n        // matchArray代表符合正则匹配的数组\r\n        // matchArray[0] 代表匹配完整的{1}\r\n        // matchArray[1] 代表{}里面具体的值1\r\n        const execTotalVal = matchArray[0];\r\n        const execVal = matchArray[1];\r\n        if (REG_NUM_RULE.test(execVal)) {\r\n            // 基于位置插值\r\n            arg1 = arg1.replace(execTotalVal, options[Number(execVal)]);\r\n        }\r\n        else {\r\n            if (prop(arg2, matchArray[1]) != null) {\r\n                arg1 = arg1.replace(execTotalVal, prop(arg2, matchArray[1]));\r\n            }\r\n        }\r\n    }\r\n    return arg1;\r\n}\r\nexport { interpolation, deepCopy, prop, simpleCopy };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/object.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "interpolation",
    "memberof": "es6/lib/object.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/object.js~interpolation",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/object.js",
    "importStyle": "{interpolation}",
    "description": "自定义插值 适用于取到接口返回的JSON根据需要转换成指定格式的字符串",
    "examples": [
      "基于位置的插值表达式 interpolation('{0}{3}{1}{1}{2}', 'A', 'B', 'C', 'D') => ADBBC\n基于字段的插值表达式 interpolation('{name} - {userID}', {name: 'test',userID: 1, age: 12}) =>test - 1"
    ],
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 最终输出的字符串"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "param",
        "description": "字符串"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "...options 字符串|对象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "最终输出的字符串"
    }
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "deepCopy",
    "memberof": "es6/lib/object.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/object.js~deepCopy",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/object.js",
    "importStyle": "{deepCopy}",
    "description": "深拷贝（基于递归）",
    "examples": [
      "deepCopy({name: 'zhansgan', obj: {}, arr: [2, 3]})"
    ],
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} 深拷贝之后的对象"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "data",
        "description": "原始对象"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "final",
        "description": "可选"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "深拷贝之后的对象"
    }
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "prop",
    "memberof": "es6/lib/object.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/object.js~prop",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/object.js",
    "importStyle": "{prop}",
    "description": "获取指定对象下指定字段的值，支持递归",
    "examples": [
      "prop({a: {b: 1}}, 'a.b') => 1\nprop({a: {b: 1}}, 'a')   => {b: 1}\nprop({a: {b: 1}}, 'm')   => null"
    ],
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} 未找到默认输出null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "obj",
        "description": "待查找的原始对象"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "path",
        "description": "需要查找的节点"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "未找到默认输出null"
    }
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "simpleCopy",
    "memberof": "es6/lib/object.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/object.js~simpleCopy",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/object.js",
    "importStyle": "{simpleCopy}",
    "description": "浅拷贝（不包括原型链属性拷贝）",
    "examples": [
      "simpleCopy({}, { name: '张三' })"
    ],
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} 输出浅拷贝对象"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "destination",
        "description": "默认空对象"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "待拷贝对象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "输出浅拷贝对象"
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "es6/lib/regex.js",
    "content": "/*\r\n * 正则常用方法\r\n * @Author: chen_huang\r\n * @Date: 2018-06-19 14:40:02\r\n * @Last Modified by: chen_huang\r\n * @Last Modified time: 2018-06-19 15:56:53\r\n */\r\nconst RegExtension = {\r\n    rules: {\r\n        // 匹配多个中文\r\n        matchMultiChinese: /[\\u4e00-\\u9fa5]+/g,\r\n        // 匹配单个中文\r\n        matchSingleChinese: /[\\u4e00-\\u9fa5]/\r\n    }\r\n};\r\nexport { RegExtension };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/regex.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "RegExtension",
    "memberof": "es6/lib/regex.js",
    "static": true,
    "longname": "es6/lib/regex.js~RegExtension",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/regex.js",
    "importStyle": "{RegExtension}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"rules\": *}"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "es6/lib/string.js",
    "content": "/*\r\n * 字符串方法扩展\r\n * @Author: chen_huang\r\n * @Date: 2018-06-13 16:00:49\r\n * @Last Modified by: chen_huang\r\n * @Last Modified time: 2018-08-31 15:22:31\r\n */\r\nimport { RegExtension } from './regex';\r\n/**\r\n * 字符串倒序\r\n * @example\r\n * reverse('qwer') => rewq\r\n * @param {string} [insert=''] 传入的字符串\r\n * @returns {string} 倒序后的字符串\r\n */\r\nfunction Reverse(insert = '') {\r\n    return Array.prototype.reverse.call(insert.split('')).join('');\r\n}\r\n/**\r\n * 当前字符串长度与最大限制长度个数作比较\r\n * @private\r\n * @param {number} nowLen\r\n * @param {number} maxNunLen\r\n * @returns {string} 输出当前长度与最大长度比较后的结果 gt/eq/lt\r\n */\r\nfunction mapState(nowLen, maxNunLen) {\r\n    const state = {\r\n        // 正好等于最大字数限制\r\n        eq: '',\r\n        // 大于最大字数限制\r\n        gt: '...',\r\n        // 小于最大字数限制\r\n        lt: ''\r\n    };\r\n    if (nowLen > maxNunLen) {\r\n        return 'gt';\r\n    }\r\n    else if (nowLen == maxNunLen) {\r\n        return 'eq';\r\n    }\r\n    else if (nowLen < maxNunLen) {\r\n        return 'lt';\r\n    }\r\n}\r\n/**\r\n * 限制指定位数的中文 不包括中文符号 超出以 ... 结尾\r\n * @example\r\n * LimitAndSliceChineseNotSym('你好啊，我是张三！', 4) => 你好啊，我...\r\n * @param {*} waitingForSliceString 需要截取指定个数的字符串\r\n * @param {number} [maxNumLen=10] 指定长度最大个数\r\n * @returns {string} 输出截取后符合长度的字符串 超过...\r\n */\r\nfunction LimitAndSliceChineseNotSym(waitingForSliceString, maxNumLen = 10) {\r\n    let temp = '';\r\n    let result = '';\r\n    let compareState = '';\r\n    let recodeChineaseNum = 0;\r\n    for (let i = 0; i <= waitingForSliceString.length - 1; i++) {\r\n        temp = waitingForSliceString.charAt(i);\r\n        compareState = mapState(recodeChineaseNum, maxNumLen);\r\n        switch (compareState) {\r\n            case 'lt':\r\n                // 处理是中文的情况\r\n                if (RegExtension\r\n                    .rules\r\n                    .matchSingleChinese\r\n                    .test(temp)) {\r\n                    result += temp;\r\n                    recodeChineaseNum++;\r\n                }\r\n                else {\r\n                    result += temp;\r\n                }\r\n                break;\r\n            case 'eq':\r\n                // 等于最大限制字数的时候\r\n                // 判断是否遍历的索引是否是最后一个 如不是加上...\r\n                i == waitingForSliceString.length - 1\r\n                    ? result = result\r\n                    : result += '...';\r\n                recodeChineaseNum++;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 限制指定位数的中文 包括中文符号 超出以 ... 结尾\r\n * @example\r\n * LimitAndSliceChinese('你好啊，我是张三！', 4) => 你好啊，...\r\n * @param {string} waitingForSliceString 需要截取指定个数的字符串\r\n * @param {number} [maxNumLen=10] 指定长度最大个数\r\n * @returns {string} 输出截取后符合长度的字符串 超过...\r\n */\r\nfunction LimitAndSliceChinese(waitingForSliceString, maxNumLen = 10) {\r\n    let temp = 0;\r\n    let result = '';\r\n    let recodeChineaseNum = 0;\r\n    let compareState = '';\r\n    for (let i = 0; i <= waitingForSliceString.length - 1; i++) {\r\n        temp = waitingForSliceString.charCodeAt(i);\r\n        compareState = mapState(recodeChineaseNum, maxNumLen);\r\n        switch (compareState) {\r\n            case 'lt':\r\n                // 英文\r\n                if (temp >= 0 && temp <= 128) {\r\n                    result += waitingForSliceString.charAt(i);\r\n                }\r\n                else {\r\n                    result += waitingForSliceString.charAt(i);\r\n                    recodeChineaseNum++;\r\n                }\r\n                break;\r\n            case 'eq':\r\n                i == waitingForSliceString.length - 1\r\n                    ? result = result\r\n                    : result += '...';\r\n                recodeChineaseNum++;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 检查字符串结尾\r\n * 判断一个字符串或者句子(str)是否以指定的字符串(target)结尾。\r\n * @example\r\n * confirmEnding(\"Bastian\", \"n\") 应该返回 true.\r\n * confirmEnding(\"Connor\", \"n\") 应该返回 false.\r\n * confirmEnding(\"He has to give me a new name\", \"name\") 应该返回 true.\r\n * confirmEnding(\"He has to give me a new name\", \"me\") 应该返回 true.\r\n * @param {string} str 目标字符串\r\n * @param {string} target 结尾的字符串\r\n * @returns {boolean}\r\n */\r\nfunction confirmEnding(str, target) {\r\n    var flag = false;\r\n    var newArr = str.split(' ');\r\n    var lastItem = newArr[newArr.length - 1];\r\n    var finalLast = lastItem.split(target);\r\n    if (finalLast[finalLast.length - 1] === '') {\r\n        flag = true;\r\n    }\r\n    return flag;\r\n}\r\n/**\r\n * 重复输出字符串\r\n * 重复一个指定的字符串 num次，如果num是一个负数则返回一个空字符串\r\n * @example\r\n * repeat(\"*\", 3) 应该返回 \"***\"\r\n * repeat(\"abc\", 4) 应该返回 \"abcabcabcabc\"\r\n * repeat(\"abc\", -2) 应该返回 \"\"\r\n * @param {string} str 原字符串\r\n * @param {number} num 重复的次数\r\n * @returns {string}\r\n */\r\nfunction repeat(str, num) {\r\n    var string = '';\r\n    for (var i = 1; i <= num; i++) {\r\n        string += str;\r\n    }\r\n    return string;\r\n}\r\n/**\r\n * 截断字符串\r\n * 如果字符串的长度比指定的参数num长，则把多余的部分用...来表示。\r\n * 切记，插入到字符串尾部的三个点号也会计入字符串的长度。\r\n * 但是，如果指定的参数num小于或等于3，则添加的三个点号不会计入字符串的长度。\r\n * @example\r\n * truncate(\"A-tisket a-tasket A green and yellow basket\", 11) 应该返回 \"A-tisket...\"\r\n * truncate(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\".length) 应该返回 \"A-tisket a-tasket A green and yellow basket\"\r\n * truncate(\"A-\", 1) 应该返回 \"A...\"\r\n * @param {string} str\r\n * @param {number} num\r\n * @returns {string}\r\n */\r\nfunction truncate(str, num) {\r\n    var last = str.length - 1 >= num ? '...' : '';\r\n    if (num <= 3) {\r\n        str = str.substr(0, num) + last;\r\n    }\r\n    else if (last === '') {\r\n        str = str.substr(0, num) + last;\r\n    }\r\n    else {\r\n        str = str.substr(0, num - 3) + last;\r\n    }\r\n    return str;\r\n}\r\nexport { Reverse, LimitAndSliceChineseNotSym, LimitAndSliceChinese, confirmEnding, repeat, truncate };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/string.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "mapState",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~mapState",
    "access": "private",
    "export": false,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": null,
    "description": "当前字符串长度与最大限制长度个数作比较",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 输出当前长度与最大长度比较后的结果 gt/eq/lt"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "nowLen",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxNunLen",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "输出当前长度与最大长度比较后的结果 gt/eq/lt"
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "Reverse",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~Reverse",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": "{Reverse}",
    "description": "字符串倒序",
    "examples": [
      "reverse('qwer') => rewq"
    ],
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 倒序后的字符串"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "insert",
        "description": "传入的字符串"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "倒序后的字符串"
    }
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "LimitAndSliceChineseNotSym",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~LimitAndSliceChineseNotSym",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": "{LimitAndSliceChineseNotSym}",
    "description": "限制指定位数的中文 不包括中文符号 超出以 ... 结尾",
    "examples": [
      "LimitAndSliceChineseNotSym('你好啊，我是张三！', 4) => 你好啊，我..."
    ],
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 输出截取后符合长度的字符串 超过..."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "waitingForSliceString",
        "description": "需要截取指定个数的字符串"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10",
        "defaultRaw": 10,
        "name": "maxNumLen",
        "description": "指定长度最大个数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "输出截取后符合长度的字符串 超过..."
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "LimitAndSliceChinese",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~LimitAndSliceChinese",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": "{LimitAndSliceChinese}",
    "description": "限制指定位数的中文 包括中文符号 超出以 ... 结尾",
    "examples": [
      "LimitAndSliceChinese('你好啊，我是张三！', 4) => 你好啊，..."
    ],
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 输出截取后符合长度的字符串 超过..."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "waitingForSliceString",
        "description": "需要截取指定个数的字符串"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10",
        "defaultRaw": 10,
        "name": "maxNumLen",
        "description": "指定长度最大个数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "输出截取后符合长度的字符串 超过..."
    }
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "confirmEnding",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~confirmEnding",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": "{confirmEnding}",
    "description": "检查字符串结尾\n判断一个字符串或者句子(str)是否以指定的字符串(target)结尾。",
    "examples": [
      "confirmEnding(\"Bastian\", \"n\") 应该返回 true.\nconfirmEnding(\"Connor\", \"n\") 应该返回 false.\nconfirmEnding(\"He has to give me a new name\", \"name\") 应该返回 true.\nconfirmEnding(\"He has to give me a new name\", \"me\") 应该返回 true."
    ],
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "目标字符串"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "结尾的字符串"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "repeat",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~repeat",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": "{repeat}",
    "description": "重复输出字符串\n重复一个指定的字符串 num次，如果num是一个负数则返回一个空字符串",
    "examples": [
      "repeat(\"*\", 3) 应该返回 \"***\"\nrepeat(\"abc\", 4) 应该返回 \"abcabcabcabc\"\nrepeat(\"abc\", -2) 应该返回 \"\""
    ],
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "原字符串"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": "重复的次数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "truncate",
    "memberof": "es6/lib/string.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/string.js~truncate",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/string.js",
    "importStyle": "{truncate}",
    "description": "截断字符串\n如果字符串的长度比指定的参数num长，则把多余的部分用...来表示。\n切记，插入到字符串尾部的三个点号也会计入字符串的长度。\n但是，如果指定的参数num小于或等于3，则添加的三个点号不会计入字符串的长度。",
    "examples": [
      "truncate(\"A-tisket a-tasket A green and yellow basket\", 11) 应该返回 \"A-tisket...\"\ntruncate(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\".length) 应该返回 \"A-tisket a-tasket A green and yellow basket\"\ntruncate(\"A-\", 1) 应该返回 \"A...\""
    ],
    "lineNumber": 179,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "es6/lib/types/INDEX.js",
    "content": "",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/types/INDEX.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "es6/lib/types/NUMBER.js",
    "content": "",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/types/NUMBER.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "es6/lib/url.js",
    "content": "/**\r\n * 截掉url协议名（http|https）以及：\r\n * @exanple\r\n * sliceProtocol('http://www.baidu.com') => //www.baidu.com\r\n * @param {string} [url=''] 待传入需要截取协议的url\r\n * @returns {string} 正常会输出//www.baidu.com 不是url的字符串原路返回\r\n */\r\nfunction sliceProtocol(url = '') {\r\n    return url.replace(/^(http|https):/, '');\r\n}\r\nexport { sliceProtocol };\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/lib/url.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "sliceProtocol",
    "memberof": "es6/lib/url.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "es6/lib/url.js~sliceProtocol",
    "access": "public",
    "export": true,
    "importPath": "utils2js/es6/lib/url.js",
    "importStyle": "{sliceProtocol}",
    "description": "截掉url协议名（http|https）以及：",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@exanple",
        "tagValue": "sliceProtocol('http://www.baidu.com') => //www.baidu.com"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} 正常会输出//www.baidu.com 不是url的字符串原路返回"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "url",
        "description": "待传入需要截取协议的url"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "正常会输出//www.baidu.com 不是url的字符串原路返回"
    }
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "es6/test.js",
    "content": "import { _Brower, _Main, _Number, _String, _Url, _Object, _Array } from './index';\r\nconst { Logger, Type } = _Main;\r\n{\r\n    const A = Logger('测试Logger');\r\n    A.info('测试成功了', '测试多个参数1', '测试多个参数2');\r\n    A.red('测试红色信息', '2222', '等你饿哦多胡搜');\r\n    const test = [\r\n        123,\r\n        '123',\r\n        true,\r\n        { name: '张三' },\r\n        function name() {\r\n            return '张三';\r\n        },\r\n        /^\\d+$/,\r\n        null,\r\n        undefined,\r\n        [1, 2, 3],\r\n        new Date(),\r\n        new Error()\r\n    ];\r\n    test.forEach(item => {\r\n        A.info(Type(item));\r\n    });\r\n}\r\nconst { isIE, isChrome, isOpera, isFirefox, isSafari } = _Brower;\r\n{\r\n    const s = Logger('测试浏览器类型判断');\r\n    s.info(isIE);\r\n    s.info(isChrome);\r\n    s.info(isOpera);\r\n    s.info(isFirefox);\r\n    s.info(isSafari);\r\n    s.info('---------------------');\r\n}\r\nconst { deepCopy } = _Object;\r\n{\r\n    const s = Logger('测试对象方法');\r\n    s.info(deepCopy({\r\n        name: '张三',\r\n        showName: function () {\r\n            console.log(222);\r\n        },\r\n        extra: {\r\n            a: '111'\r\n        },\r\n        a: [2222],\r\n        v: [{\r\n                name: '1111'\r\n            }],\r\n        s: /ssss/g,\r\n        q: null,\r\n        w: undefined\r\n    }));\r\n}\r\nconst { float, getRandomBit } = _Number;\r\n{\r\n    const s = Logger('测试数字方法');\r\n    s.info(float.add(0.1, 0.2));\r\n    s.info(float.sub(0.1, 0.2));\r\n    s.info(float.ride(0.1, 0.2));\r\n    s.info(float.divide(0.1, 0.2));\r\n}\r\nconst { Reverse, LimitAndSliceChinese, LimitAndSliceChineseNotSym, truncate, repeat, confirmEnding } = _String;\r\n{\r\n    const s = Logger('测试字符串方法');\r\n    let name = '你好啊，我是张三！';\r\n    s.info(Reverse('qwert1s'));\r\n    s.info(LimitAndSliceChinese(name, 4));\r\n    s.info(LimitAndSliceChineseNotSym(name, 4));\r\n    s.info(truncate(name, 4));\r\n    s.info(repeat(name, 4));\r\n    s.info(confirmEnding(name, '！'));\r\n}\r\nconst { sliceProtocol } = _Url;\r\n{\r\n    const s = Logger('测试url方法');\r\n    s.info(sliceProtocol('http://www.baidu.com'));\r\n    s.info(sliceProtocol('https://www.baidu.com'));\r\n}\r\nconst { upSet, destroyer, chunk } = _Array;\r\n{\r\n    let arr = [5, 2, 5, 6, 1, 2, 3];\r\n    const s = Logger('测试数组方法');\r\n    s.info(upSet(arr));\r\n    s.info(destroyer(arr, 2));\r\n    s.info(chunk(arr, 2));\r\n}\r\n",
    "static": true,
    "longname": "D:/Users/chen_huang/Desktop/github/Utils2js/es6/test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "Logger",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~Logger",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "isIE",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~isIE",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "deepCopy",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~deepCopy",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "float",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~float",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "Reverse",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~Reverse",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "sliceProtocol",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~sliceProtocol",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "upSet",
    "memberof": "es6/test.js",
    "static": true,
    "longname": "es6/test.js~upSet",
    "access": "public",
    "export": false,
    "importPath": "utils2js/es6/test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Utils2js\r\n\r\n一个基于`TypeScript`和`esdoc`编写的工具方法\r\n\r\n相应的工具方法已生成文档\r\n\r\n安装方式\r\n\r\n```shell\r\nnpm run utils2js\r\n```\r\n\r\n使用方式\r\n\r\n```javascript\r\nimport {\r\n    _Brower,\r\n    _Main,\r\n    _Number,\r\n    _String,\r\n    _Url\r\n} from 'utils2js'\r\n```\r\n\r\n根据自身需求，按需引用对应类型的方法\r\n\r\n在线文档查看地址：[地址](https://megan-ta.github.io/Utils2js/)\r\n\r\n比如引用_Main对象下的Logger方法\r\n\r\n```javascript\r\nconst A = Logger('测试Logger')\r\nA.info('测试成功了')\r\nconst test = [\r\n    123,\r\n    '123',\r\n    true,\r\n    {name: '张三'},\r\n    function name () {\r\n        return '张三'\r\n    },\r\n    /^\\d+$/,\r\n    null,\r\n    undefined,\r\n    [1, 2, 3],\r\n    new Date(),\r\n    new Error()\r\n]\r\ntest.forEach(item => {\r\n    A.info(Type(item))\r\n})\r\n```\r\n",
    "longname": "D:\\Users\\chen_huang\\Desktop\\github\\Utils2js\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"utils2js\",\r\n  \"version\": \"1.0.3\",\r\n  \"description\": \"Common tool method encapsulation\",\r\n  \"main\": \"index.js\",\r\n  \"directories\": {\r\n    \"lib\": \"lib\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"webpack-dev-server --config webpack.config.js\",\r\n    \"prod\": \"gulp && npm run publish\",\r\n    \"publish\": \"npm publish ./publish\",\r\n    \"doc\": \"./node_modules/.bin/esdoc\",\r\n    \"tsc6\": \"tsc\",\r\n    \"pack\": \"npm run tsc6 && npm run doc --dev\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/Megan-TA/Utils2js.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"utils\",\r\n    \"utils2js\"\r\n  ],\r\n  \"author\": \"chen214\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/Megan-TA/Utils2js/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/Megan-TA/Utils2js#readme\",\r\n  \"devDependencies\": {\r\n    \"awesome-typescript-loader\": \"3.5.0\",\r\n    \"babel-core\": \"^6.26.3\",\r\n    \"babel-preset-es2015\": \"^6.24.1\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"esdoc-typescript-plugin\": \"^1.0.1\",\r\n    \"gulp\": \"^3.9.1\",\r\n    \"gulp-babel\": \"^7.0.1\",\r\n    \"gulp-load-plugins\": \"^1.5.0\",\r\n    \"gulp-plumber\": \"^1.2.0\",\r\n    \"gulp-uglify\": \"^3.0.0\",\r\n    \"html-webpack-plugin\": \"^3.2.0\",\r\n    \"mockjs\": \"^1.0.1-beta3\",\r\n    \"pump\": \"^3.0.0\",\r\n    \"source-map-loader\": \"^0.2.3\",\r\n    \"tslint\": \"^5.10.0\",\r\n    \"typescript\": \"^2.9.2\",\r\n    \"webpack\": \"3.5.5\",\r\n    \"webpack-dev-server\": \"2.7.1\",\r\n    \"webpack-merge\": \"^4.1.2\"\r\n  }\r\n}\r\n",
    "longname": "D:\\Users\\chen_huang\\Desktop\\github\\Utils2js\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]